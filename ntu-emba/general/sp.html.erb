<!-- ntu: Student Profile 學生輪廓 -->

<div class="container-lg">
	<div class="main-layout">
		<aside class="emba-aside">
			<%= render :partial => "/partials/accordian_nav" %>
		</aside>
		<main class="emba-main">
		    <h2 class="main-title">NTU EMBA Student Profile</h2>
			<div class="sp-wrapper">
				<h4>The Executive MBA program</h4>
				<div class="data-wrapper">
				    <div class="data-item">
					    <h5 class="data-title">Gender</h5>
						<div class="chart-wrap">
							<div class="inner">
						        <canvas id="genderChart"></canvas>
							</div>
							<div id="embaChart1_legend" class="chart-legend"></div>
						</div>
					</div>
					<div class="data-item">
					    <h5 class="data-title">Educational Distribution</h5>
						<div class="chart-wrap">
                            <div class="inner">
                                <canvas id="educationalChart"></canvas>
                            </div>
							<div id="embaChart2_legend" class="chart-legend"></div>
						</div>
					</div>
					<div class="data-item">
					    <h5 class="data-title">Age distribution</h5>
						<div class="chart-wrap">
                            <div class="inner">
                                <canvas id="ageChart"></canvas>
                            </div>
							<div id="embaChart3_legend" class="chart-legend"></div>
						</div>
					</div>
					<div class="data-item">
					    <h5 class="data-title">Job Classification</h5>
						<div class="chart-wrap">
                            <div class="inner">
                                <canvas id="jobChart"></canvas>
                            </div>
							<div id="embaChart4_legend" class="chart-legend"></div>
						</div>
					</div>
					<div class="data-item">
					    <h5 class="data-title">Classification of Occupations</h5>
						<div class="chart-wrap">
                            <div class="inner">
                                <canvas id="occupationsChart"></canvas>
                            </div>
							<div id="embaChart5_legend" class="chart-legend"></div>
						</div>
					</div>
				</div>
			</div>
			
			<%= render :partial => "/partials/page_share" %>
		</main>
	</div>
</div>

<% content_for :js do %>

    <!-- Chart.js -->
    <script src="../javascripts/chart.js"></script>
    <script src="../javascripts/chartjs-plugin-deferred.min.js"></script>
    <script>
        // html 圖示擴充
        const getOrCreateLegendList = (chart, id) => {
            const legendContainer = document.getElementById(id);
            let listContainer = legendContainer.querySelector('ul');

            if (!listContainer) {
                listContainer = document.createElement('ul');
                listContainer.style.margin = 0;
                listContainer.style.padding = 0;

                legendContainer.appendChild(listContainer);
            }

            return listContainer;
        };

        const htmlLegendPlugin = {
            id: 'htmlLegend',
            afterUpdate(chart, args, options) {
                const ul = getOrCreateLegendList(chart, options.containerID);

                // Remove old legend items
                while (ul.firstChild) {
                    ul.firstChild.remove();
                }

                // Reuse the built-in legendItems generator
                const items = chart.options.plugins.legend.labels.generateLabels(chart);

                items.forEach(item => {
                    const li = document.createElement('li');
                    li.style.alignItems = 'center';
                    li.style.cursor = 'pointer';
                    li.style.display = 'flex';
                    li.style.flexDirection = 'row';
                    li.style.marginLeft = '10px';

                    // Color box
                    const boxSpan = document.createElement('span');
                    boxSpan.style.background = item.fillStyle;
                    boxSpan.style.borderColor = item.strokeStyle;
                    boxSpan.style.borderWidth = item.lineWidth + 'px';
                    boxSpan.style.display = 'inline-block';
                    boxSpan.style.height = '10px';
                    boxSpan.style.marginRight = '5px';
                    boxSpan.style.width = '20px';

                    // Text
                    const textContainer = document.createElement('p');
                    textContainer.style.color = item.fontColor;
                    textContainer.style.margin = 0;
                    textContainer.style.padding = 0;
                    textContainer.style.fontSize = '10px';
                    textContainer.style.textDecoration = item.hidden ? 'line-through' : '';

                    const text = document.createTextNode(item.text);
                    textContainer.appendChild(text);

                    li.appendChild(boxSpan);
                    li.appendChild(textContainer);
                    ul.appendChild(li);
                });
            }
        };
        // 註冊 chart 滾動顯示 html 圖示
        Chart.register(ChartDeferred, htmlLegendPlugin);

		// 性別
        const data1 = {
            // 標題
            labels: ['Male', 'Female'],
            datasets: [{
                // 標籤
                label: 'Gender',
                // 資料
                data: [68.9, 31.1],
                // 圖表背景色
                backgroundColor: [
                    'rgba(84, 129, 194)',
                    'rgba(166, 67, 48)'
                ],
				borderColor: 'rgba(250, 250, 250, 1)',
            }]
        };

        const config1 = {
            type: 'doughnut',
            data: data1,
            options: {
                // 符合響應式
                responsive: true,
				// labels 字體顏色
				color: 'rgba(0, 0, 0, .7)',
                plugins: {
                    // 圖例
                    htmlLegend: {
                        // ID of the container to put the legend in
                        containerID: 'embaChart1_legend',
                    },
                    legend: {
                        position: 'false',
                    },
                    // 滾動顯示參數 
                    // 因上面已註冊事件 所以這邊移除一樣會滾到才顯示 可以調整參數
                    deferred: {
                        yOffset: '50%', // defer until 50% of the canvas height are inside the viewport
                        delay: 100      // delay of 500 ms after the canvas is considered inside the viewport
                    }
                }
            },
        };
		
		// 學歷分佈
		const data2 = {
            // 標題
            labels: ['Doctor', 'Master', 'Bachelor', 'Associatee Degree', 'something else'],
            datasets: [{
                // 標籤
                label: 'Educational Distribution',
                // 資料
                data: [9.1, 37.2, 48.2, 4.3, 1.2],
                // 圖表背景色
                backgroundColor: [
                    'rgba(201, 115, 84)',
                    'rgba(220, 164, 102)',
                    'rgba(221, 195, 114)',
                    'rgba(97, 153, 141)',
                    'rgba(54, 70, 83)'
                ],
				borderColor: 'rgba(250, 250, 250, 1)',
            }]
        };

        const config2 = {
            type: 'doughnut',
            data: data2,
            options: {
                // 符合響應式
                responsive: true,
				// labels 字體顏色
				color: 'rgba(0, 0, 0, .7)',
                plugins: {
                    // 圖例
                    htmlLegend: {
                        // ID of the container to put the legend in
                        containerID: 'embaChart2_legend',
                    },
                    legend: {
                        position: 'false',
                    },
                    // 滾動顯示參數 
                    // 因上面已註冊事件 所以這邊移除一樣會滾到才顯示 可以調整參數
                    deferred: {
                        yOffset: '50%', // defer until 50% of the canvas height are inside the viewport
                        delay: 100      // delay of 500 ms after the canvas is considered inside the viewport
                    }
                }
            },
        };
		
		// 年齡分佈
		const data3 = {
            // 標題
            labels: ['31-39 years old', '40-49 years old', '50-59 years old', '60 years old or more'],
            datasets: [{
                // 標籤
                label: 'Age distribution',
                // 資料
                data: [15.9, 50.0, 32.9, 1.2],
                // 圖表背景色
                backgroundColor: [
                    'rgba(119, 47, 26)',
                    'rgba(245, 133, 73)',
                    'rgba(242, 166, 90)',
                    'rgba(238, 193, 112)'
                ],
				borderColor: 'rgba(250, 250, 250, 1)',
            }]
        };

        const config3 = {
            type: 'doughnut',
            data: data3,
            options: {
                // 符合響應式
                responsive: true,
				// labels 字體顏色
				color: 'rgba(0, 0, 0, .7)',
                plugins: {
                    // 圖例
                    htmlLegend: {
                        // ID of the container to put the legend in
                        containerID: 'embaChart3_legend',
                    },
                    legend: {
                        position: 'false',
                    },
                    // 滾動顯示參數 
                    // 因上面已註冊事件 所以這邊移除一樣會滾到才顯示 可以調整參數
                    deferred: {
                        yOffset: '50%', // defer until 50% of the canvas height are inside the viewport
                        delay: 100      // delay of 500 ms after the canvas is considered inside the viewport
                    }
                }
            },
        };
		
		// 職業類別
		const data4 = {
            // 標題
            labels: ['President', 'General Manager', 'Executive', 'Middle management', 'Manager', 'Specialized staff', 'Professional'],
            datasets: [{
                // 標籤
                label: 'Job Classification',
                // 資料
                data: [11.0, 14.0, 46.3, 7.3, 5.0, 2.4, 14.0],
                // 圖表背景色
                backgroundColor: [
                    'rgba(38, 70, 83)',
                    'rgba(40, 114, 113)',
                    'rgba(42, 157, 143)',
                    'rgba(138, 177, 125)',
                    'rgba(233, 196, 106)',
                    'rgba(244, 162, 97)',
					'rgba(231, 111, 81)'
                ],
				borderColor: 'rgba(250, 250, 250, 1)',
            }]
        };

        const config4 = {
            type: 'doughnut',
            data: data4,
            options: {
                // 符合響應式
                responsive: true,
				// labels 字體顏色
				color: 'rgba(0, 0, 0, .7)',
                plugins: {
                    // 圖例
                    htmlLegend: {
                        // ID of the container to put the legend in
                        containerID: 'embaChart4_legend',
                    },
                    legend: {
                        position: 'false',
                    },
                    // 滾動顯示參數 
                    // 因上面已註冊事件 所以這邊移除一樣會滾到才顯示 可以調整參數
                    deferred: {
                        yOffset: '50%', // defer until 50% of the canvas height are inside the viewport
                        delay: 100      // delay of 500 ms after the canvas is considered inside the viewport
                    }
                }
            },
        };
		
		// 職務分類
		const data5 = {
            // 標題
            labels: ['Technology Manufacturing', 'science and technology service', 'Finance and Insurance Industry', 'Government Organization & Culture and Education', 'Biotechnology industry', 'General Manufacturing', 'General service industry', 'Professional Services', 'Cultural and Creative Industries', 'something else'],
            datasets: [{
                // 標籤
                label: 'Classification of Occupations',
                // 資料
                data: [22.0, 17.7, 14.0, 1.2, 12.8, 7.9, 7.3, 4.9, 5.5, 6.7],
                // 圖表背景色
                backgroundColor: [
                    'rgba(255, 180, 0)',
                    'rgba(210, 152, 13)',
                    'rgba(165, 124, 27)',
                    'rgba(120, 96, 40)',
                    'rgba(54, 52, 69)',
                    'rgba(72, 68, 110)',
					'rgba(94, 86, 155)',
                    'rgba(119, 107, 205)',
                    'rgba(144, 128, 255)',
                    'rgba(198, 156, 249)'
                ],
				borderColor: 'rgba(250, 250, 250, 1)',
            }]
        };

        const config5 = {
            type: 'doughnut',
            data: data5,
            options: {
                // 符合響應式
                responsive: true,
				// labels 字體顏色
				color: 'rgba(0, 0, 0, .7)',
                plugins: {
                    // 圖例
                    htmlLegend: {
                        // ID of the container to put the legend in
                        containerID: 'embaChart5_legend',
                    },
                    legend: {
                        position: 'false',
                    },
                    // 滾動顯示參數 
                    // 因上面已註冊事件 所以這邊移除一樣會滾到才顯示 可以調整參數
                    deferred: {
                        yOffset: '50%', // defer until 50% of the canvas height are inside the viewport
                        delay: 100      // delay of 500 ms after the canvas is considered inside the viewport
                    }
                }
            },
        };
		
        new Chart(
            document.getElementById('genderChart'),
            config1
        );
        new Chart(
            document.getElementById('educationalChart'),
            config2
        );
		new Chart(
            document.getElementById('ageChart'),
            config3
        );
		new Chart(
            document.getElementById('jobChart'),
            config4
        );
		new Chart(
            document.getElementById('occupationsChart'),
            config5
        );
    </script>
<% end %>

